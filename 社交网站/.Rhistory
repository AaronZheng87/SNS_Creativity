set.seed(1)
simdat2 <- mixedDesign(
B = 3, W = NULL, n = 4,
M = M, SD = 20, long = T
)
names(simdat2)[1] <- "F"
levels(simdat2$F) <- c("low", "medium", "high")
simdat2$DV <- round(simdat2$DV)
head(simdat2)
table.word <- simdat2 %>%
group_by(F) %>%
summarise(N = n(), M = mean(DV), SD = sd(DV), SE = SD / sqrt(N))
summary(aovF <- aov(DV ~ 1 + F + Error(id), simdat2))
library(MASS)
HcSum <- rbind(
cH00 = c(low = 1 / 3, med = 1 / 3, hi = 1 / 3),
cH01 = c(low = +2 / 3, med = -1 / 3, hi = -1 / 3),
cH02 = c(low = -1 / 3, med = +2 / 3, hi = -1 / 3)
)
fractions(t(HcSum)) # 转换成矩阵并且以分数形式展示
ginv2 <- function(x) {
fractions(provideDimnames(ginv(x),
base = dimnames(x)[2:1]
))
}
(XcSum <- ginv2(HcSum))
contrasts(simdat2$F) <- XcSum[, 2:3]
m1_mr <- lm(DV ~ 1 + F, data = simdat2)
summary(m1_mr)$coef
M <- matrix(c(10, 20, 10, 40),
nrow = 4, ncol = 1, byrow = F)
set.seed(1)
simdat3 <- mixedDesign(B = 4, W = NULL, n = 5,
M = M, SD = 10, long = TRUE)
names(simdat3)[1] <- "F"
levels(simdat3$F) <- c("F1", "F2", "F3", "F4")
table3 <- simdat3 %>% group_by(F) %>%
summarise(N = length(DV), M = mean(DV),
SD = sd(DV), SE = SD/sqrt(N))
(GM <- mean(table3$M))
simdat3 %>%
ggplot(aes(x = F, y = DV)) +
stat_summary(fun.data = "mean_cl_normal") +
stat_summary(fun = mean, aes(group = 1), geom = "line") +
theme_bw() +
theme(panel.grid = element_blank())
t(HcRE <- rbind(
c2vs1 = c(F1 = -1, F2 = +1, F3 = 0, F4 = 0),
c3vs2 = c(F1 = 0, F2 = -1, F3 = +1, F4 = 0),
c4vs3 = c(F1 = 0, F2 = 0, F3 = -1, F4 = +1)
))#函数t是用来行列转化的
(XcRE <- ginv2(HcRE))
contrasts(simdat3$F) <- XcRE
m2_mr <- lm(DV ~ 1 + F, data = simdat3)
summary(m2_mr)$coef
(contrasts(simdat3$F) <- XcRE)
(covars <- as.data.frame(
model.matrix( ~ + F, simdat3)
))
simdat3[, c("Fc2vs1", "Fc3vs2", "Fc4vs3")] <- covars[, 2:4]
m3_mr <- lm(DV ~ 1 + Fc2vs1 + Fc3vs2 + Fc4vs3, data = simdat3)
summary(m3_mr)$coef
Xpol <- contr.poly(4)
(contrasts(simdat3$F) <- Xpol)
m1_mr.Xpol <- lm(DV ~ 1 + F, data = simdat3)
summary(m1_mr.Xpol)$coef
colSums(contr.treatment(4))
(Xsum <- cbind(F1 = c(1, 1, -1, -1),
F2 = c(1, -1, 1, -1),
F1xF2 = c(1, -1, -1, 1)))
cor(Xsum)
cor(contr.sum(4))
simdat4 <- mixedDesign(B = c(2, 2), W = NULL, n = 5, M = M, SD = 10, long = TRUE)
names(simdat4)[1:2] <- c("A", "B")
head(simdat4)
table4 <- (simdat4) %>% group_by(A, B) %>%
summarise(N = length(DV), M = mean(DV),SD = sd(DV), SE = SD/sqrt(N))
table4
(GM <- mean(table4$M))
simdat4 %>%
ggplot(aes(x = A, y = DV, shape = B, linetype = B)) +
stat_summary(fun.data = "mean_cl_normal", aes(group = B)) +
stat_summary(fun = mean, aes(group = B), geom = "line")
m2_aov <- aov(DV ~ A*B + Error(id), data = simdat4) %>% summary()
round(summary(m2_mr <- lm(DV ~ 1 + A*B, data = simdat4))$coef,3)
m2_aov
contrasts(simdat4$A) <- contr.sum(2)
contrasts(simdat4$B) <- contr.sum(2)
m2_mr.sum <- lm(DV ~ 1 + A*B, data = simdat4)
summary(m2_mr.sum)$coef
#用协变量的方法
mat_myC <- model.matrix(~ 1 + A*B, simdat4)
simdat4[, c("GM", "FA", "FB", "FAxB")] <- mat_myC
m2_mr.v2 <- lm(DV ~ 1 + FA + FB + FAxB, data = simdat4)
summary(m2_mr.v2)$coef
simdat3
HcInt <- rbind(
A = c(F1 = 1/4, F2 = 1/4, F3 = -1/4, F4 = -1/4),
B = c(F1 = 1/4, F2 = -1/4, F3 = 1/4, F4 = -1/4),
AxB = c(F1 = 1/4, F2 = -1/4, F3 = -1/4, F4 = 1/4)
)
t(fractions(HcInt))
XcInt <- ginv2(HcInt)
contrasts(simdat3$F) <- XcInt
m3_mr <- lm(DV ~ + F, data = simdat3)
summary(m3_mr)$coef
HcNes <- rbind(
B = c(F1 = 1/2, F2 = -1/2, F3 = 1/2, F4 = -1/2),
B1xA = c(F1 = -1, F2 = 0, F3 = 1, F4 = 0),
B2xA = c(F1 = 0, F2 = -1, F3 = 0, F4 = 1))
t(fractions(HcNes))
(XcNes <- ginv2(HcNes))
contrasts(simdat3$F) <- XcNes
m4_mr <- lm(DV ~ 1 + F, data = simdat3)
round(summary(m4_mr)$coef, 3)
contrasts(simdat4$A) <- c(-0.5, +0.5)
contrasts(simdat4$B) <- c(+0.5, -0.5)
m4_mr.x <- lm(DV ~1 + B/A, data = simdat4)
round(summary(m4_mr.x)$coef,3)
mat_myC <- model.matrix(~ 1 + F, simdat3)
fractions(as.matrix(data.frame(mat_myC)))
simdat3[,c("GM", "B", "B1_A", "B2_A")] <-mat_myC
m2_mr.myC1 <- lm(DV ~ 1 + B + B1_A + B2_A, data = simdat3)
summary(m2_mr.myC1)$sigma
m2_mr.myC2 <- lm(DV ~ 1 + B1_A + B2_A, data = simdat3)
summary(m2_mr.myC2)$sigma
HcNes2 <- rbind(
A = c(F1 = 1/2, F2 = 1/2, F3 = -1/2, F4 = -1/2),
A1_B = c(F1 = 1, F2 = -1, F3 = 0, F4 = 0),
A2_B = c(F1 = 0, F2 = 0, F3 = 1, F4 = -1)
)
t(fractions(HcNes2))
(XcNes2 <- ginv2(HcNes2))
contrasts(simdat3$F) <- XcNes2
m4_mr <- lm(DV ~ 1 + F, data = simdat3)
round(summary(m4_mr)$coef, 3)
contrasts(simdat4$A) <- contr.treatment(2)
contrasts(simdat4$B) <- contr.treatment(2)
XcTr <- simdat4 %>%
group_by(A, B) %>%
summarise() %>%
model.matrix(~ 1 + A*B, .) %>%
as.data.frame() %>%
as.matrix()
rownames(XcTr) <- c("A1_B1", "A1_B2", "A2_B1", "A2_B2")
XcTr
t(ginv2(XcTr))
contrasts(simdat4$A) <- contr.sum(2)
contrasts(simdat4$B) <- contr.sum(2)
XcSum <- simdat4 %>%
group_by(A, B) %>%
summarise() %>%
model.matrix(~ 1 + A*B, .) %>%
as.data.frame() %>% as.matrix()
rownames(XcSum) <- c("A1_B1", "A1_B2", "A2_B1", "A2_B2")
XcSum
t(ginv2(XcSum))
M9 <- matrix(c(150, 175, 200,
175, 150, 175,
200, 175, 150), ncol = 1)
matrix(M9, nrow = 3, dimnames = list(paste0("Prime", 1:3), paste0("Target", 1:3)))
set.seed(1)
simdat5 <- mixedDesign(B = c(3, 3), W = NULL, n = 5, M = M9, SD = 50, long = TRUE)
names(simdat5)[1:2] <- c("Prime", "Target")
levels(simdat5$Prime) <- paste0("Prime", 1:3)
levels(simdat5$Target) <- paste0("Target", 1:3)
table5 <- simdat5 %>%
group_by(Prime, Target) %>%
summarise(N = length(DV), M = mean(DV),
SD = sd(DV), SE = SD/sqrt(N))
table5 %>% dplyr::select(Prime, Target, M) %>%
pivot_wider(names_from = Target, values_from = M)
simdat5$Target = as.factor(simdat5$Target)
simdat5 %>%
ggplot(aes(x = Prime, y = DV, fill = Target, group = Target))  +
stat_summary(fun = mean, aes(group = Target), geom = "bar", position = "dodge")
(meansExp <- rbind(
Prime1 = c(Target1 = 150, Target2 = 200, Target3 = 200),
Prime2 = c(200, 150, 200),
Prime3 = c(200, 200, 150)
))
(meansExp - mean(meansExp))*3/50
simdat5$cMatch <- ifelse(as.numeric(simdat5$Prime) == as.numeric(simdat5$Target), -2, 1)
(mOmn <- summary(aov(DV ~ Prime * Target + Error(id), data = simdat5)))
(mCon <- summary(aov(DV ~ Prime*Target + cMatch + Error(id), data = simdat5)))
contrasts(simdat$F) <- contr.sum(2)
(summary(lm(DV ~ 1 + F, simdat)))
table.word
setwd("/Users/zhengyuanrui/学习笔记/hlm学习/how to capitalize on a priori contrasts/")
library(tidyverse)
source("mixedDesign.v0.6.3.R")
M <- matrix(c(0.8, 0.4), nrow = 2, ncol = 1, byrow = FALSE)
set.seed(1)
simdat <- mixedDesign(B = 2, W = NULL, n = 5, M = M, SD = .20, long = TRUE)
names(simdat)[1] <- "F"
levels(simdat$F) <- c("F1", "F2")
simdat
table1 <- simdat %>%
group_by(F) %>%
summarise(N = n(), M = mean(DV), SD = sd(DV), SE = SD / sqrt(N))
(GM <- mean(table1$M))
simdat %>%
ggplot(aes(x = F, y = DV)) +
stat_summary(fun.data = "mean_cl_normal") +
stat_summary(fun = mean, aes(group = 1), geom = "line") +
scale_y_continuous(limits = c(0, 1.1), breaks = seq(0.0, 1.0, 0.2)) +
theme_bw() +
theme(panel.grid = element_blank())
m_F <- lm(DV ~ 1 + F, simdat)
round(summary(m_F)$coef, 3)
contrasts(simdat$F)
(contrasts(simdat$F) <- c(-0.5, +0.5))
m1_mr <- lm(DV ~ 1 + F, simdat)
round(summary(m1_mr)$coef, 3)
m2_mr <- lm(DV ~ 1 + F, simdat)
M <- matrix(c(500, 450, 400),
nrow = 3, ncol = 1, byrow = FALSE
)
set.seed(1)
simdat2 <- mixedDesign(
B = 3, W = NULL, n = 4,
M = M, SD = 20, long = T
)
names(simdat2)[1] <- "F"
levels(simdat2$F) <- c("low", "medium", "high")
simdat2$DV <- round(simdat2$DV)
head(simdat2)
table.word <- simdat2 %>%
group_by(F) %>%
summarise(N = n(), M = mean(DV), SD = sd(DV), SE = SD / sqrt(N))
summary(aovF <- aov(DV ~ 1 + F + Error(id), simdat2))
library(MASS)
HcSum <- rbind(
cH00 = c(low = 1 / 3, med = 1 / 3, hi = 1 / 3),
cH01 = c(low = +2 / 3, med = -1 / 3, hi = -1 / 3),
cH02 = c(low = -1 / 3, med = +2 / 3, hi = -1 / 3)
)
fractions(t(HcSum)) # 转换成矩阵并且以分数形式展示
ginv2 <- function(x) {
fractions(provideDimnames(ginv(x),
base = dimnames(x)[2:1]
))
}
(XcSum <- ginv2(HcSum))
contrasts(simdat2$F) <- XcSum[, 2:3]
m1_mr <- lm(DV ~ 1 + F, data = simdat2)
summary(m1_mr)$coef
M <- matrix(c(10, 20, 10, 40),
nrow = 4, ncol = 1, byrow = F)
set.seed(1)
simdat3 <- mixedDesign(B = 4, W = NULL, n = 5,
M = M, SD = 10, long = TRUE)
names(simdat3)[1] <- "F"
levels(simdat3$F) <- c("F1", "F2", "F3", "F4")
table3 <- simdat3 %>% group_by(F) %>%
summarise(N = length(DV), M = mean(DV),
SD = sd(DV), SE = SD/sqrt(N))
(GM <- mean(table3$M))
simdat3 %>%
ggplot(aes(x = F, y = DV)) +
stat_summary(fun.data = "mean_cl_normal") +
stat_summary(fun = mean, aes(group = 1), geom = "line") +
theme_bw() +
theme(panel.grid = element_blank())
t(HcRE <- rbind(
c2vs1 = c(F1 = -1, F2 = +1, F3 = 0, F4 = 0),
c3vs2 = c(F1 = 0, F2 = -1, F3 = +1, F4 = 0),
c4vs3 = c(F1 = 0, F2 = 0, F3 = -1, F4 = +1)
))#函数t是用来行列转化的
(XcRE <- ginv2(HcRE))
contrasts(simdat3$F) <- XcRE
m2_mr <- lm(DV ~ 1 + F, data = simdat3)
summary(m2_mr)$coef
(contrasts(simdat3$F) <- XcRE)
(covars <- as.data.frame(
model.matrix( ~ + F, simdat3)
))
simdat3[, c("Fc2vs1", "Fc3vs2", "Fc4vs3")] <- covars[, 2:4]
m3_mr <- lm(DV ~ 1 + Fc2vs1 + Fc3vs2 + Fc4vs3, data = simdat3)
summary(m3_mr)$coef
Xpol <- contr.poly(4)
(contrasts(simdat3$F) <- Xpol)
m1_mr.Xpol <- lm(DV ~ 1 + F, data = simdat3)
summary(m1_mr.Xpol)$coef
colSums(contr.treatment(4))
(Xsum <- cbind(F1 = c(1, 1, -1, -1),
F2 = c(1, -1, 1, -1),
F1xF2 = c(1, -1, -1, 1)))
cor(Xsum)
cor(contr.sum(4))
simdat4 <- mixedDesign(B = c(2, 2), W = NULL, n = 5, M = M, SD = 10, long = TRUE)
names(simdat4)[1:2] <- c("A", "B")
head(simdat4)
table4 <- (simdat4) %>% group_by(A, B) %>%
summarise(N = length(DV), M = mean(DV),SD = sd(DV), SE = SD/sqrt(N))
table4
(GM <- mean(table4$M))
simdat4 %>%
ggplot(aes(x = A, y = DV, shape = B, linetype = B)) +
stat_summary(fun.data = "mean_cl_normal", aes(group = B)) +
stat_summary(fun = mean, aes(group = B), geom = "line")
m2_aov <- aov(DV ~ A*B + Error(id), data = simdat4) %>% summary()
round(summary(m2_mr <- lm(DV ~ 1 + A*B, data = simdat4))$coef,3)
m2_aov
contrasts(simdat4$A) <- contr.sum(2)
contrasts(simdat4$B) <- contr.sum(2)
m2_mr.sum <- lm(DV ~ 1 + A*B, data = simdat4)
summary(m2_mr.sum)$coef
#用协变量的方法
mat_myC <- model.matrix(~ 1 + A*B, simdat4)
simdat4[, c("GM", "FA", "FB", "FAxB")] <- mat_myC
m2_mr.v2 <- lm(DV ~ 1 + FA + FB + FAxB, data = simdat4)
summary(m2_mr.v2)$coef
simdat3
HcInt <- rbind(
A = c(F1 = 1/4, F2 = 1/4, F3 = -1/4, F4 = -1/4),
B = c(F1 = 1/4, F2 = -1/4, F3 = 1/4, F4 = -1/4),
AxB = c(F1 = 1/4, F2 = -1/4, F3 = -1/4, F4 = 1/4)
)
t(fractions(HcInt))
XcInt <- ginv2(HcInt)
contrasts(simdat3$F) <- XcInt
m3_mr <- lm(DV ~ + F, data = simdat3)
summary(m3_mr)$coef
HcNes <- rbind(
B = c(F1 = 1/2, F2 = -1/2, F3 = 1/2, F4 = -1/2),
B1xA = c(F1 = -1, F2 = 0, F3 = 1, F4 = 0),
B2xA = c(F1 = 0, F2 = -1, F3 = 0, F4 = 1))
t(fractions(HcNes))
(XcNes <- ginv2(HcNes))
contrasts(simdat3$F) <- XcNes
m4_mr <- lm(DV ~ 1 + F, data = simdat3)
round(summary(m4_mr)$coef, 3)
contrasts(simdat4$A) <- c(-0.5, +0.5)
contrasts(simdat4$B) <- c(+0.5, -0.5)
m4_mr.x <- lm(DV ~1 + B/A, data = simdat4)
round(summary(m4_mr.x)$coef,3)
mat_myC <- model.matrix(~ 1 + F, simdat3)
fractions(as.matrix(data.frame(mat_myC)))
simdat3[,c("GM", "B", "B1_A", "B2_A")] <-mat_myC
m2_mr.myC1 <- lm(DV ~ 1 + B + B1_A + B2_A, data = simdat3)
summary(m2_mr.myC1)$sigma
m2_mr.myC2 <- lm(DV ~ 1 + B1_A + B2_A, data = simdat3)
summary(m2_mr.myC2)$sigma
HcNes2 <- rbind(
A = c(F1 = 1/2, F2 = 1/2, F3 = -1/2, F4 = -1/2),
A1_B = c(F1 = 1, F2 = -1, F3 = 0, F4 = 0),
A2_B = c(F1 = 0, F2 = 0, F3 = 1, F4 = -1)
)
t(fractions(HcNes2))
(XcNes2 <- ginv2(HcNes2))
contrasts(simdat3$F) <- XcNes2
m4_mr <- lm(DV ~ 1 + F, data = simdat3)
round(summary(m4_mr)$coef, 3)
contrasts(simdat4$A) <- contr.treatment(2)
contrasts(simdat4$B) <- contr.treatment(2)
XcTr <- simdat4 %>%
group_by(A, B) %>%
summarise() %>%
model.matrix(~ 1 + A*B, .) %>%
as.data.frame() %>%
as.matrix()
rownames(XcTr) <- c("A1_B1", "A1_B2", "A2_B1", "A2_B2")
XcTr
t(ginv2(XcTr))
contrasts(simdat4$A) <- contr.sum(2)
contrasts(simdat4$B) <- contr.sum(2)
XcSum <- simdat4 %>%
group_by(A, B) %>%
summarise() %>%
model.matrix(~ 1 + A*B, .) %>%
as.data.frame() %>% as.matrix()
rownames(XcSum) <- c("A1_B1", "A1_B2", "A2_B1", "A2_B2")
XcSum
t(ginv2(XcSum))
M9 <- matrix(c(150, 175, 200,
175, 150, 175,
200, 175, 150), ncol = 1)
matrix(M9, nrow = 3, dimnames = list(paste0("Prime", 1:3), paste0("Target", 1:3)))
set.seed(1)
simdat5 <- mixedDesign(B = c(3, 3), W = NULL, n = 5, M = M9, SD = 50, long = TRUE)
names(simdat5)[1:2] <- c("Prime", "Target")
levels(simdat5$Prime) <- paste0("Prime", 1:3)
levels(simdat5$Target) <- paste0("Target", 1:3)
table5 <- simdat5 %>%
group_by(Prime, Target) %>%
summarise(N = length(DV), M = mean(DV),
SD = sd(DV), SE = SD/sqrt(N))
table5 %>% dplyr::select(Prime, Target, M) %>%
pivot_wider(names_from = Target, values_from = M)
simdat5$Target = as.factor(simdat5$Target)
simdat5 %>%
ggplot(aes(x = Prime, y = DV, fill = Target, group = Target))  +
stat_summary(fun = mean, aes(group = Target), geom = "bar", position = "dodge")
(meansExp <- rbind(
Prime1 = c(Target1 = 150, Target2 = 200, Target3 = 200),
Prime2 = c(200, 150, 200),
Prime3 = c(200, 200, 150)
))
(meansExp - mean(meansExp))*3/50
simdat5$cMatch <- ifelse(as.numeric(simdat5$Prime) == as.numeric(simdat5$Target), -2, 1)
(mOmn <- summary(aov(DV ~ Prime * Target + Error(id), data = simdat5)))
(mCon <- summary(aov(DV ~ Prime*Target + cMatch + Error(id), data = simdat5)))
hp <- df %>%
group_by(valence, Match) %>%
summarise() %>%
model.matrix(~ 1 + valence*Match, .) %>%
as.data.frame() %>% as.matrix()
library(lme4)
library(lmerTest)
library(afex)
library(ggplot2)
library(emmeans)
library(tidyverse)
library(hypr)
df <- read_csv("/Users/zhengyuanrui/lmmdata.csv")
glimpse(df)
df <- df %>% mutate(across(where(is.character), as.factor))
glimpse(df)
df %>% ggplot(aes(x = valence, y = rt, color = valence)) +
ggdist::stat_halfeye(aes(x = valence, y = rt, fill = valence,
width = 0.3,
justification = -0.3,
point_color = NA)) +
geom_boxplot(width = 0.1,
outlier.shape = NA
) +
gghalves::geom_half_point(
side = "1",
alpha = 0.05,
range_scale = 0.4
) +facet_wrap(~ Match)  + theme_classic() + ggsci::scale_color_lancet() + ggsci::scale_fill_lancet()
(table <- df %>% group_by(valence, Match) %>% summarise(N = length(rt), M = mean(rt), SD = sd(rt), SE = SD/sqrt(N)))
(GM <- mean(table$M))
df$valence <- factor(df$valence, levels = c("bad", "ordinary", "good"))
df$Match <- factor(df$Match, levels = c("match", "mismatch"))
contrasts(df$valence)
contrasts(df$Match)
# rmt1 <- lmer(rt ~ valence * Match + (valence * Match|subj_idx),data = df)
# isSingular(rmt1)
# summary(rmt1)
rmt2 <- lmer(rt ~ valence * Match + (valence + Match|subj_idx),data = df)
isSingular(rmt2)
summary(rmt2)
# rmt3 <- lmer(rt ~ valence * Match + (valence + Match||subj_idx),data = df)
# isSingular(rmt3)
# summary(rmt3)
round(summary(rmt2)$coef, 3)
table
round(summary(a <- lm(rt ~ valence * Match, df))$coef,3)
anova(rmt2)
emm_options(pbkrtest.limit = 6608)
emmeans(object = rmt2, pairwise ~ valence, adjust = "bonferroni")
emmeans(object = rmt2, pairwise ~ Match, adjust = "bonferroni")
joint_tests(object = rmt2, by = "valence")
emmeans(object = rmt2, pairwise ~ valence|Match)
emmeans(object = rmt2, pairwise ~ Match|valence)
HcHel <- hypr(
b1 = ordinary ~ bad,
b2 = good ~ (bad + ordinary) / 2,
levels = c("bad", "ordinary", "good")
)
# 与contr.helmert(3)R内置的不同是因为上面的有标准化过，经典Helmert对比是不直接估计差异的
Hcsum <- hypr(
c1 = match ~ mismatch,
levels = c("match", "mismatch")
)
df$valence <- factor(df$valence, levels = c("bad", "ordinary", "good"))
contrasts(df$valence) <- contr.hypothesis(HcHel)
contrasts(df$Match) <- contr.hypothesis(Hcsum)
contrasts(df$valence)
contrasts(df$Match)
# rmh1 <- lmer(rt ~ valence * Match + (valence * Match|subj_idx),data = df)
# rmh2 <- lmer(rt ~ valence * Match + (valence + Match|subj_idx),data = df)
# isSingular(rmh2)
# summary(rmh2)
rmh3 <- lmer(rt ~ valence * Match + (Match|subj_idx),data = df)
isSingular(rmh3)
summary(rmh3)
rmh4 <- lmer(rt ~ valence * Match + (valence|subj_idx),data = df)
isSingular(rmh4)
summary(rmh4)
anova(rmh3, rmh4)
summary(rmh4)
anova(rmh4)
emmeans(object = rmh4, pairwise ~ valence, adjust = "bonferroni")
emmeans(object = rmh4, pairwise ~ Match, adjust = "bonferroni")
joint_tests(object = rmh4, by = "valence")
emmeans(object = rmh4, pairwise ~ valence | Match)
hp <- df %>%
group_by(valence, Match) %>%
summarise() %>%
model.matrix(~ 1 + valence*Match, .) %>%
as.data.frame() %>% as.matrix()
hp <- df %>%
group_by(valence, Match) %>%
summarise() %>%
model.matrix(~ 1 + valence*Match, .) %>%
as.data.frame() %>% as.matrix()
rownames(hp) <- c("bad_match", "bad_mismatch", "ordinary_match",
"ordinary_mismatch", "good_match", "good_mismatch")
hp
model.matrix(~ 1 + valence*Match, .)
model.matrix(~ 1 + valence*Match, df)
contrasts(df$valence) <- contr.treatment(3)
contrasts(df$Match) <- contr.treatment(2)
Modelcontr <- model.matrix(~ 1 + valence*Match, df)
Modelcont
Modelcontr
df
df %>% mutate(condition = paste0(df$valence, "_", df$Match))
styler:::style_selection()
