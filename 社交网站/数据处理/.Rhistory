modindices(model_valid_EIB4, sort = T, maximum.number = 5)
valid_EIB5 <- "v_EIB =~ EIB1 + EIB2 +
EIB3 + EIB4 + EIB5 +EIB6 + EIB7 + EIB8
EIB5	~~	EIB7
EIB1	~~	EIB2
EIB7	~~	EIB8
EIB6	~~	EIB7
"
model_valid_EIB5 <- cfa(valid_EIB5,
data = df1)
fitMeasures(model_valid_EIB5,
c("chisq", "df", "pvalue","cfi",
"rmsea", "tli", "srmr", "gfi"))
modindices(model_valid_EIB5, sort = T, maximum.number = 5)
valid_EIB6 <- "v_EIB =~ EIB1 + EIB2 +
EIB3 + EIB4 + EIB5 +EIB6 + EIB7 + EIB8
EIB5	~~	EIB7
EIB1	~~	EIB2
EIB7	~~	EIB8
EIB6	~~	EIB7
EIB5	~~	EIB6
"
model_valid_EIB6 <- cfa(valid_EIB6,
data = df1)
fitMeasures(model_valid_EIB6,
c("chisq", "df", "pvalue","cfi",
"rmsea", "tli", "srmr", "gfi"))
modindices(model_valid_EIB6, sort = T, maximum.number = 5)
valid_EIB7 <- "v_EIB =~ EIB1 + EIB2 +
EIB3 + EIB4 + EIB5 +EIB6 + EIB7 + EIB8
EIB5	~~	EIB7
EIB1	~~	EIB2
EIB7	~~	EIB8
EIB6	~~	EIB7
EIB5	~~	EIB6
EIB6	~~	EIB8
"
model_valid_EIB7 <- cfa(valid_EIB7,
data = df1)
fitMeasures(model_valid_EIB7,
c("chisq", "df", "pvalue","cfi",
"rmsea", "tli", "srmr", "gfi"))
modindices(model_valid_EIB7, sort = T, maximum.number = 5)
df1 %>% dplyr::select(EIB1:EIB8) %>%
KMO()
df1 %>% dplyr::select(EIB1:EIB8) %>%
cortest.bartlett()
df1 %>% dplyr::select(EIB1:EIB8) %>%
principal(nfactors=1, score=TRUE)
semTools::reliability(model_valid_EIB)
df2 <- df1 %>%
mutate(
SNS_t = (SNS1 + SNS2 + SNS3 +
SNS4 + SNS5 + SNS6) / 6,
SES_t = SES1 + SES2 + SES3_r +
SES4 + SES5_r + SES6 + SES7 +
SES8 + SES9_r + SES10_r,
CSES_t = CSES1 + CSES2 +
CSES3 + CSES4,
EIB_t = EIB1 + EIB2 + EIB3 +
EIB4 + EIB5 +
EIB6 + EIB7 + EIB8
) %>%
dplyr::select(
id, IP, sex, grade,
residence, school,
SNS_t, SES_t,
CSES_t, EIB_t
) %>% mutate(sex = if_else(sex == 1, "male", "female")) %>%
mutate(residence = if_else(residence == 1, "city", "rural")) %>%
mutate(school = if_else(school == 1,  "public", "private")) %>%
mutate(grade = case_when(
grade == 1 ~ "freshman",
grade == 2 ~ "sophomore",
grade == 3 ~ "junior",
grade == 4 ~ "senior"
)) %>% mutate(across(IP:school, as.factor))
df2 <- df2 %>%
mutate(inter_raw = (SES_t - mean(SES_t)) * SNS_t,
center_SES = scale(SES_t, center = TRUE,
scale = FALSE)) %>% mutate(
IP = str_extract(IP, "[\u4e00-\u9fa5]+")
)
####3虚拟编码
df2 <- cbind(df2, dummy.code(df2$sex))
df2 <- cbind(df2, dummy.code(df2$grade))
df2 <- cbind(df2, dummy.code(df2$residence))
df2 <- cbind(df2, dummy.code(df2$school))
# df2$sex <- factor(df2$sex)
# df2$grade <- factor(df2$grade)
# df2$school <- factor(df2$school)
df2$inter_raw <- as.numeric(df2$inter_raw)
df2$center_SES <- as.numeric(df2$center_SES)
df2$SNS_t <- as.numeric(df2$SNS_t)
str(df2)
# write_xlsx(df2, "清洗完的数据.xlsx")
# write_csv(df2, "清洗完的数据.csv")
# write_csv(df2, "abc.csv")
df_report <- df2 %>%
dplyr::select(SNS_t, SES_t, CSES_t, EIB_t, IP, sex, grade, residence, school)
report::report(df_report)
df_report %>%
group_by(sex) %>%
summarise(mean = mean(EIB_t))
df_report %>%
group_by(grade) %>%
summarise(mean = mean(EIB_t))
df2 %>%
select(id, SNS_t, SES_t, CSES_t, EIB_t) %>%
pivot_longer(cols = SNS_t:EIB_t, names_to = "scale",
values_to = "value") %>%
ggplot(aes(x = value, y = stat(density))) +
geom_histogram(aes(fill = scale)) +
geom_density() +
facet_wrap(~scale)
df2 %>%
select(id, SNS_t, SES_t, CSES_t, EIB_t) %>%
pivot_longer(cols = SNS_t:EIB_t, names_to = "scale",
values_to = "value") %>% filter(scale == "SNS_t") %>%
ggplot(aes(x = scale, y = value)) +
geom_boxplot(outlier.colour="red", outlier.shape=7,outlier.size=4)
cor(df_report[1:4])
cor_p <- rcorr(as.matrix(df_report[1:4]))
cor_p
t.test(EIB_t ~ sex, df2)#显著
cohens_d(EIB_t ~ sex, data =df2)
summary(aovsex <- aov(EIB_t ~ sex, data=df2))
eta_squared(aovsex)
summary(g_m <- aov(EIB_t ~ grade, df2))
eta_squared(g_m)
t.test(EIB_t ~ residence, df2)
cohens_d(EIB_t ~ residence, data =df2)
t.test(EIB_t ~ school, df2)
cohens_d(EIB_t ~ school, data =df2)
aov(EIB_t ~ school, data=df2) %>% summary()
aov(EIB_t ~ school, data=df2) %>% eta_squared()
simple_med <- '
EIB_t ~ b1*CSES_t
EIB_t ~ cdash*SNS_t
CSES_t ~ a1*SNS_t
### 控制变量
EIB_t ~ male
EIB_t ~ public
EIB_t ~ freshman
EIB_t ~ sophomore
EIB_t ~ junior
CSES_t ~ male
CSES_t ~ public
CSES_t ~ freshman
CSES_t ~ sophomore
CSES_t ~ junior
#ind and total
ind := a1*b1
direct := b1
total := a1*b1 + cdash
'
fit_simple_med <- sem(simple_med, data = df2,
se = "bootstrap",bootstrap = 5000)
df2
View(df2)
df2$SNS_t %>% sd()
df2$SNS_t %>% var()
0.7933902*0.7933902
df2 %>%
select(SNS_t, SES_t, CSES_t, EIB_t) %>%
summarise(var = var())
df2 %>%
select(SNS_t, SES_t, CSES_t, EIB_t) %>%
mutate(v = var())
df2 %>%
select(SNS_t, SES_t, CSES_t, EIB_t) %>%
mutate(v = var(.))
df2 %>%
select(SNS_t, SES_t, CSES_t, EIB_t) %>%
var()
df2 %>%
select(SNS_t, SES_t, CSES_t, EIB_t) %>%
sd()
df2 %>%
select(SNS_t, SES_t, CSES_t, EIB_t) %>%
sd()
sd(df2$SNS_t)
sd(df2$SNS_t)
df1
df1 %>%
select(SNS1, SNS2, SNS3,
SNS4,  SNS5 , SNS6) %>%
sd()
df1 %>%
select(SNS1, SNS2, SNS3,
SNS4,  SNS5 , SNS6)
a
a <- df1 %>%
select(SNS1, SNS2, SNS3,
SNS4,  SNS5 , SNS6)
a
a <- df1 %>%
select(SNS1, SNS2, SNS3,
SNS4,  SNS5 , SNS6) %>%
rowsum()
df1 %>%
select(SNS1, SNS2, SNS3,
SNS4,  SNS5 , SNS6) %>%
rowsum()
df1 %>%
select(SNS1, SNS2, SNS3,
SNS4,  SNS5 , SNS6) %>%
rowsum(.)
df1
a <- df1 %>%
select("SNS3","SNS4","SNS5","SNS6")
a <- df %>%
select("SNS3","SNS4","SNS5","SNS6")
a
df %>%
select("SNS1","SNS2","SNS3","SNS4","SNS5","SNS6") %>%
mutate(m = (SNS1+SNS2+SNS3+SNS4+SNS5+SNS6)/2)
df %>%
select("SNS1","SNS2","SNS3","SNS4","SNS5","SNS6") %>%
mutate(m = (SNS1+SNS2+SNS3+SNS4+SNS5+SNS6)/6)
df_check %>%
select("SNS1","SNS2","SNS3","SNS4","SNS5","SNS6") %>%
mutate(m = (SNS1+SNS2+SNS3+SNS4+SNS5+SNS6)/6)
df_check %>%
select("SNS1","SNS2","SNS3","SNS4","SNS5","SNS6") %>%
mutate(m = (SNS1+SNS2+SNS3+SNS4+SNS5+SNS6)/6)
df_check <- df %>%
select("SNS1","SNS2","SNS3","SNS4","SNS5","SNS6") %>%
mutate(m = (SNS1+SNS2+SNS3+SNS4+SNS5+SNS6)/6)
df_check$m %>% sd
df_check$m %>% sd()
df_check$m
df_check$m %>% mean()
df_check$m %>% sd()
df_check$m %>% sd()
df_check$m %>% mean()
df1 %>%
mutate(
SNS_t = (SNS1 + SNS2 + SNS3 +
SNS4 + SNS5 + SNS6) / 6,
SES_t = (SES1 + SES2 + SES3_r +
SES4 + SES5_r + SES6 + SES7 +
SES8 + SES9_r + SES10_r)/10,
CSES_t = (CSES1 + CSES2 +
CSES3 + CSES4)/4,
EIB_t = (EIB1 + EIB2 + EIB3 +
EIB4 + EIB5 +
EIB6 + EIB7 + EIB8)/8
)
df_check <- df1 %>%
mutate(
SNS_t = (SNS1 + SNS2 + SNS3 +
SNS4 + SNS5 + SNS6) / 6,
SES_t = (SES1 + SES2 + SES3_r +
SES4 + SES5_r + SES6 + SES7 +
SES8 + SES9_r + SES10_r)/10,
CSES_t = (CSES1 + CSES2 +
CSES3 + CSES4)/4,
EIB_t = (EIB1 + EIB2 + EIB3 +
EIB4 + EIB5 +
EIB6 + EIB7 + EIB8)/8
)
df_check
df_check %>% view()
df_check <- df1 %>%
mutate(
SNS_t = (SNS1 + SNS2 + SNS3 +
SNS4 + SNS5 + SNS6) / 6,
SES_t = (SES1 + SES2 + SES3_r +
SES4 + SES5_r + SES6 + SES7 +
SES8 + SES9_r + SES10_r)/10,
CSES_t = (CSES1 + CSES2 +
CSES3 + CSES4)/4,
EIB_t = (EIB1 + EIB2 + EIB3 +
EIB4 + EIB5 +
EIB6 + EIB7 + EIB8)/8
) %>%
dplyr::select(
id, IP, sex, grade,
residence, school,
SNS_t, SES_t,
CSES_t, EIB_t
)
df_check <- df1 %>%
mutate(
SNS_t = (SNS1 + SNS2 + SNS3 +
SNS4 + SNS5 + SNS6) / 6,
SES_t = (SES1 + SES2 + SES3_r +
SES4 + SES5_r + SES6 + SES7 +
SES8 + SES9_r + SES10_r)/10,
CSES_t = (CSES1 + CSES2 +
CSES3 + CSES4)/4,
EIB_t = (EIB1 + EIB2 + EIB3 +
EIB4 + EIB5 +
EIB6 + EIB7 + EIB8)/8
) %>%
dplyr::select(
SNS_t, SES_t,
CSES_t, EIB_t
)
df_check
report::report(df_check)
?scale
df1 %>%
mutate(
SNS_t = (SNS1 + SNS2 + SNS3 +
SNS4 + SNS5 + SNS6) / 6,
SES_t = SES1 + SES2 + SES3_r +
SES4 + SES5_r + SES6 + SES7 +
SES8 + SES9_r + SES10_r,
CSES_t = CSES1 + CSES2 +
CSES3 + CSES4,
EIB_t = EIB1 + EIB2 + EIB3 +
EIB4 + EIB5 +
EIB6 + EIB7 + EIB8,
s_SES = scale(SES_t, center = T, scale = F),
s_CSES = scale( CSES_t, center = T, scale = F),
s_EIB = scale(EIB_t, center = T, scale = F)
) %>%
dplyr::select(
SNS_t, s_SES,
s_CSES, s_EIB
)
df_check2 <- df1 %>%
mutate(
SNS_t = (SNS1 + SNS2 + SNS3 +
SNS4 + SNS5 + SNS6) / 6,
SES_t = SES1 + SES2 + SES3_r +
SES4 + SES5_r + SES6 + SES7 +
SES8 + SES9_r + SES10_r,
CSES_t = CSES1 + CSES2 +
CSES3 + CSES4,
EIB_t = EIB1 + EIB2 + EIB3 +
EIB4 + EIB5 +
EIB6 + EIB7 + EIB8,
s_SES = scale(SES_t, center = T, scale = F),
s_CSES = scale( CSES_t, center = T, scale = F),
s_EIB = scale(EIB_t, center = T, scale = F)
) %>%
dplyr::select(
SNS_t, s_SES,
s_CSES, s_EIB
)
report::report(df_check2)
df_check2$SNS_t %>%
var()
df_check2$s_CSES %>%
var()
df_check2$s_EIB %>%
var()
df_check2 <- df1 %>%
mutate(
SNS_t = (SNS1 + SNS2 + SNS3 +
SNS4 + SNS5 + SNS6) / 6,
SES_t = SES1 + SES2 + SES3_r +
SES4 + SES5_r + SES6 + SES7 +
SES8 + SES9_r + SES10_r,
CSES_t = CSES1 + CSES2 +
CSES3 + CSES4,
EIB_t = EIB1 + EIB2 + EIB3 +
EIB4 + EIB5 +
EIB6 + EIB7 + EIB8,
s_SES = scale(SES_t, center = T, scale = F),
s_CSES = scale( CSES_t, center = T, scale = F),
s_EIB = scale(EIB_t, center = T, scale = F)
) %>%
dplyr::select(
SNS_t, s_SES,
s_CSES, s_EIB
)
report::report(df_check2)
df_check2 <- df1 %>%
mutate(
SNS_t = (SNS1 + SNS2 + SNS3 +
SNS4 + SNS5 + SNS6) / 6,
SES_t = (SES1 + SES2 + SES3_r +
SES4 + SES5_r + SES6 + SES7 +
SES8 + SES9_r + SES10_r)/10,
CSES_t = (CSES1 + CSES2 +
CSES3 + CSES4)/4,
EIB_t = (EIB1 + EIB2 + EIB3 +
EIB4 + EIB5 +
EIB6 + EIB7 + EIB8)/8
) %>%
dplyr::select(
SNS_t, SES_t,
CSES_t, EIB_t
)
report::report(df_check2)
df1$SNS1
df$SNS1
df %>%
select(SNS1:SNS6)
df %>%
select(SNS1:SNS6) %>%
mutate(all = SNS1 + SNS2 + SNS3 + SNS4 + SNS5 + SNS6)
df %>%
select(SNS1:SNS6) %>%
mutate(all = SNS1 + SNS2 + SNS3 + SNS4 + SNS5 + SNS6) %>%
summarise(m = mean(all),
sd = sd(all))
df %>%
select(SNS1:SNS6) %>%
mutate(all = (SNS1 + SNS2 + SNS3 + SNS4 + SNS5 + SNS6)/6) %>%
summarise(m = mean(all),
sd = sd(all))
df_check2 <- df1 %>%
mutate(
SNS_t = (SNS1 + SNS2 + SNS3 +
SNS4 + SNS5 + SNS6) / 6,
SES_t = (SES1 + SES2 + SES3_r +
SES4 + SES5_r + SES6 + SES7 +
SES8 + SES9_r + SES10_r)/10,
CSES_t = (CSES1 + CSES2 +
CSES3 + CSES4)/4,
EIB_t = (EIB1 + EIB2 + EIB3 +
EIB4 + EIB5 +
EIB6 + EIB7 + EIB8)/8
) %>%
dplyr::select(
SNS_t, SES_t,
CSES_t, EIB_t
)
df_check2 <- df1 %>%
mutate(
SNS_t = (SNS1 + SNS2 + SNS3 +
SNS4 + SNS5 + SNS6) / 6,
SES_t = (SES1 + SES2 + SES3_r +
SES4 + SES5_r + SES6 + SES7 +
SES8 + SES9_r + SES10_r)/10,
CSES_t = (CSES1 + CSES2 +
CSES3 + CSES4)/4,
EIB_t = (EIB1 + EIB2 + EIB3 +
EIB4 + EIB5 +
EIB6 + EIB7 + EIB8)/8
) %>%
dplyr::select(
SNS_t, SES_t,
CSES_t, EIB_t
)
report::report(df_check2)
valid_SNS <- "v_SNS=~ SNS1 + SNS2 +
SNS3 + SNS4 + SNS5 + SNS6"
model_valid_SNS <- cfa(valid_SNS, optim.method="GLM", data = df1)
model_valid_SNS <- cfa(valid_SNS, estimator = "ML", data = df1)
fitMeasures(model_valid_SNS,
c("chisq", "df", "pvalue",
"cfi", "rmsea", "tli", 'srmr'))
model_valid_SNS <- cfa(valid_SNS, estimator = "GLS", data = df1)
fitMeasures(model_valid_SNS,
c("chisq", "df", "pvalue",
"cfi", "rmsea", "tli", 'srmr'))
model_valid_SNS <- cfa(valid_SNS, estimator = "GLS", likelihood = "wishart", data = df1)
fitMeasures(model_valid_SNS,
c("chisq", "df", "pvalue",
"cfi", "rmsea", "tli", 'srmr'))
model_valid_SNS <- cfa(valid_SNS, estimator = "GLS", likelihood = "wishart", data = df1)
model_valid_SNS <- cfa(valid_SNS, estimator = "ML", likelihood = "wishart", data = df1)
fitMeasures(model_valid_SNS,
c("chisq", "df", "pvalue",
"cfi", "rmsea", "tli", 'srmr'))
View(model_valid_SNS3)
valid_CSES <- "v_CSES =~ CSES1 + CSES2 +
CSES3 + CSES4"
model_valid_CSES <- cfa(valid_CSES, estimator = "GLS", data = df1)
fitMeasures(model_valid_CSES,
c("chisq", "df", "pvalue","cfi",
"rmsea", "tli", 'srmr'))
valid_EIB <- "v_EIB =~ EIB1 + EIB2 +
EIB3 + EIB4 + EIB5 +
EIB6 + EIB7 + EIB8"
model_valid_EIB <- cfa(valid_EIB,
estimator = "GLS",data = df1)
fitMeasures(model_valid_EIB,
c("chisq", "df", "pvalue","cfi",
"rmsea", "tli", "srmr", "gfi"))
247.509-446.153
model2 <- '
# measurement model
SNS =~ SNS1 + SNS2 + SNS3 + SNS4 + SNS5 +
SNS6
SES =~ SES1 + SES2 + SES3_r + SES4 + SES5_r +
SES6 + SES7 + SES8 + SES9_r + SES10_r
CSES =~ CSES1 + CSES2 + CSES3 + CSES4
EIB =~ EIB1 + EIB2 + EIB3 + EIB4 + EIB5 +
EIB6 + EIB7 + EIB8
f =~ SNS1 + SNS2 + SNS3 + SNS4 +
SNS5 + SNS6+1*SES1 + SES2 +
SES3_r + 1*SES4 + 1*SES5_r + SES6 +
SES7 + SES8 + SES9_r + SES10_r+
CSES1 + CSES2 + CSES3 + CSES4 +
EIB1 +
EIB2 + EIB3 + EIB4 + EIB5 +
EIB6 + EIB7 + EIB8
# residual correlations
SNS ~~ SES
SNS ~~ CSES
SNS ~~ EIB
SES ~~ CSES
SES ~~ EIB
CSES ~~ EIB
'
fit2 <- cfa(model2, data = df, optim.method = "em", em.iter.max = 20000,
em.fx.tol = 1e-08, em.dx.tol = 1e-04)
fit2 <- cfa(model2, data = df, optim.method = "em", em.iter.max = 20000)
fit2 <- cfa(model2, data = df, verbose = TRUE,optim.method = "em", em.iter.max = 20000)
fit2 <- cfa(model2, data = df)
lavInspect(fit2, "optim.gradient")
lavInspect(fit, "options")$optim.dx.tol
fit2 <- cfa(model2, data = df)
fit2 <- cfa(model2, data = df, optimizer = "WLSMV")
fit2 <- cfa(model2, data = df, estimator = "WLSMV")
